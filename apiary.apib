FORMAT: 1A
HOST: http://smashdb.me/

# Smash Database API

Smash Database is a simple API allowing users to view information about Super Smash Brothers Melee tournaments, participants, and characters.

## Tournaments Collection [/api/tournaments]

### List All Tournaments [GET]

+ Response 200 (application/json)

        {
            "tournaments":[
                {
                    "date":" April 11th-12th 2015",
                    "id":2,
                    "image_path":"https://images.smash.gg/images/tournament/1016/image-93df90a298eedf734fe42ac562e9c130.jpg",
                    "location":" CA (NorCal)",
                    "name":"I'm Not Yelling! feat. ARMADA",
                    "sanitized":"i-m-not-yelling-feat-armada"
                },
                {
                    "date":" April 11th, 2015",
                    "id":3,
                    "image_path":"https://images.smash.gg/images/tournament/1037/image-5b136245e78f2d0b22fdef47609f5c34.png",
                    "location":" MA",
                    "name":"BUST2",
                    "sanitized":"bust2"
                },
                {
                    "date":" April 4th-5th 2015",
                    "id":4,
                    "image_path":"https://images.smash.gg/images/tournament/1058/image-dc243efbde07b784c0cb91f822e9c342.jpg",
                    "location":" NE",
                    "name":"HUSH: Harvard University Smash House",
                    "sanitized":"hush-harvard-university-smash-house"
                }
            ]
        }

## Tournament Information Collection [/api/tournament/{tournament_id}]

### Get information for specific tournament [GET]

+ Parameters 
    + tournament_id (required, int)

+ Response 200 (application/json)

        {
          "tournament": {
            "date": " April 11th-12th 2015", 
            "id": 2, 
            "image_path": "https://images.smash.gg/images/tournament/1016/image-93df90a298eedf734fe42ac562e9c130.jpg", 
            "location": " CA (NorCal)", 
            "name": "I'm Not Yelling! feat. ARMADA", 
            "num_participants": 371, 
            "sanitized": "i-m-not-yelling-feat-armada"
          }
        }

## Participants Collection [/api/participants]

### List All Participants [GET]

+ Response 200 (application/json)  

        {
            "participants": [
                {
                    "id": 1, 
                    "location": "Sweden", 
                    "main": "Ice Climbers", 
                    "main_id": 23, 
                    "sponsor": "[A]", 
                    "tag": "Armada", 
                    "tournament_id": 2, 
                    "tournament_name": "I'm Not Yelling! feat. ARMADA"
                }, 
                {
                    "id": 3, 
                    "location": "Sweden", 
                    "main": "Falco", 
                    "main_id": 20, 
                    "sponsor": "TSM", 
                    "tag": "Leffen", 
                    "tournament_id": 2, 
                    "tournament_name": "I'm Not Yelling! feat. ARMADA"
                }, 
                {
                    "id": 4, 
                    "location": "California", 
                    "main": "Pichu", 
                    "main_id": 22, 
                    "sponsor": "MIOM", 
                    "tag": "SFAT", 
                    "tournament_id": 2, 
                    "tournament_name": "I'm Not Yelling! feat. ARMADA"
                }
            ]
        }
        
## Participant Information Collection [/api/participant/{participant_id}]

### Get information for specific participant [GET]

+ Parameters 
    + participant_id (required, int)

+ Response 200 (application/json)

        {
          "participant": {
            "id": 1, 
            "location": "Sweden", 
            "main": "Ice Climbers", 
            "sponsor": "[A]", 
            "tag": "Armada", 
            "tournament_id": 2
          }
        }

## Characters Collection [/api/characters]

### List All Characters [GET]

+ Response 200 (application/json)

        {
            "characters": [
                {
                    "debut": 1981, 
                    "id": 2, 
                    "image_path": "mario.png", 
                    "moves": "Super Jump Punch,Fireball,Mario Tornado,Cape", 
                    "name": "Mario", 
                    "tier": "E", 
                    "universe": "Mario", 
                    "weight": 100
                }, 
                {
                    "debut": 1983, 
                    "id": 3, 
                    "image_path": "luigi.png", 
                    "moves": "Super Jump Punch,Fireball,Luigi Cyclone,Throat Thrust,Green Missile", 
                    "name": "Luigi", 
                    "tier": "D", 
                    "universe": "Mario", 
                    "weight": 100
                }, 
                {
                    "debut": 1990, 
                    "id": 4, 
                    "image_path": "yoshi.png", 
                    "moves": "Egg Lay,Egg Throw,Egg Roll,Yoshi Bomb", 
                    "name": "Yoshi", 
                    "tier": "D", 
                    "universe": "Yoshi", 
                    "weight": 108
                }
            ]
        }

## Character Information Collection [/api/character/{character_id}]

### Get information for specific character [GET]

+ Parameters
    + character_id (required, int)

+ Response 200 (application/json)

        {
            "character": {
                "debut": "1981", 
                "id": 2, 
                "image_path": "mario.png", 
                "moves": "Super Jump Punch,Fireball,Mario Tornado,Cape", 
                "name": "Mario", 
                "tier": "E", 
                "universe": "Mario", 
                "weight": "100"
            }
        }
